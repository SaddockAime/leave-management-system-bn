paths:
  /api/manager/hierarchy/{employeeId}:
    get:
      tags:
        - Manager
      summary: Get employee hierarchy
      description: Retrieve the management hierarchy for a specific employee
      security:
        - bearerAuth: []
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the employee
      responses:
        '200':
          description: Employee hierarchy retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee:
                    $ref: '#/components/schemas/Employee'
                  manager:
                    $ref: '#/components/schemas/Employee'
                  department:
                    $ref: '#/components/schemas/Department'
                  hierarchy:
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Employee not found
        '500':
          description: Internal server error

  /api/manager/team/{managerId}:
    get:
      tags:
        - Manager
      summary: Get team members for a manager
      description: Retrieve all team members managed by a specific manager
      security:
        - bearerAuth: []
      parameters:
        - name: managerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the manager
        - name: nested
          in: query
          schema:
            type: boolean
            default: false
          description: Include nested team members (subordinates of subordinates)
      responses:
        '200':
          description: Team members retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  manager:
                    $ref: '#/components/schemas/Employee'
                  teamMembers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
                  totalCount:
                    type: integer
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/manager/can-manage/{managerId}/{employeeId}:
    get:
      tags:
        - Manager
      summary: Check if user can manage another employee
      description: Verify if a manager has authority over a specific employee
      security:
        - bearerAuth: []
      parameters:
        - name: managerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the manager
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the employee
      responses:
        '200':
          description: Management permission checked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  canManage:
                    type: boolean
                  reason:
                    type: string
                    description: Explanation if cannot manage
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/manager/approval-chain/{employeeId}:
    get:
      tags:
        - Manager
      summary: Get approval chain for an employee
      description: Retrieve the complete approval chain for leave requests
      security:
        - bearerAuth: []
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the employee
      responses:
        '200':
          description: Approval chain retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee:
                    $ref: '#/components/schemas/Employee'
                  approvalChain:
                    type: array
                    items:
                      type: object
                      properties:
                        level:
                          type: integer
                        approver:
                          $ref: '#/components/schemas/Employee'
                        role:
                          type: string
                        isRequired:
                          type: boolean
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/manager/assign-manager:
    post:
      tags:
        - Manager
      summary: Assign manager to employee
      description: Assign or change the manager for a specific employee (Admin/HR Manager only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - employeeId
                - newManagerId
              properties:
                employeeId:
                  type: string
                  format: uuid
                  description: ID of the employee
                newManagerId:
                  type: string
                  format: uuid
                  description: ID of the new manager
                effectiveDate:
                  type: string
                  format: date
                  description: Effective date for the change
      responses:
        '200':
          description: Manager assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Manager assigned successfully
                  employee:
                    $ref: '#/components/schemas/Employee'
                  newManager:
                    $ref: '#/components/schemas/Employee'
                  effectiveDate:
                    type: string
                    format: date
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - insufficient permissions
        '500':
          description: Internal server error

  /api/manager/performance/{managerId}:
    get:
      tags:
        - Manager
      summary: Get manager performance metrics
      description: Retrieve performance metrics for a specific manager
      security:
        - bearerAuth: []
      parameters:
        - name: managerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the manager
        - name: period
          in: query
          schema:
            type: string
            enum: [month, quarter, year]
            default: month
          description: Performance period
      responses:
        '200':
          description: Performance metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  manager:
                    $ref: '#/components/schemas/Employee'
                  period:
                    type: string
                  metrics:
                    type: object
                    properties:
                      teamSize:
                        type: integer
                      averageLeaveApprovalTime:
                        type: number
                      teamProductivity:
                        type: number
                      employeeSatisfaction:
                        type: number
                      turnoverRate:
                        type: number
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/manager/delegation:
    post:
      tags:
        - Manager
      summary: Delegate management responsibilities
      description: Temporarily delegate management responsibilities to another employee
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - managerId
                - delegateId
                - startDate
                - endDate
              properties:
                managerId:
                  type: string
                  format: uuid
                  description: ID of the manager delegating
                delegateId:
                  type: string
                  format: uuid
                  description: ID of the employee receiving delegation
                startDate:
                  type: string
                  format: date
                  description: Start date of delegation
                endDate:
                  type: string
                  format: date
                  description: End date of delegation
                scope:
                  type: array
                  items:
                    type: string
                    enum: [LEAVE_APPROVAL, PERFORMANCE_REVIEW, TEAM_MANAGEMENT]
                  description: Scope of delegated responsibilities
      responses:
        '200':
          description: Delegation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Delegation created successfully
                  delegation:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      manager:
                        $ref: '#/components/schemas/Employee'
                      delegate:
                        $ref: '#/components/schemas/Employee'
                      startDate:
                        type: string
                        format: date
                      endDate:
                        type: string
                        format: date
                      scope:
                        type: array
                        items:
                          type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - insufficient permissions
        '500':
          description: Internal server error
