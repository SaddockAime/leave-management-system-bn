openapi: 3.0.0
info:
  title: Leave Management System API
  description: API documentation for the Leave Management System with role-based access control
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
  - url: http://localhost:8081
    description: Alternative local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginCredentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    RegisterCredentials:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        firstName:
          type: string
        lastName:
          type: string
    LeaveRequest:
      type: object
      required:
        - leaveTypeId
        - startDate
        - endDate
      properties:
        leaveTypeId:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          type: string
    LeaveBalance:
      type: object
      required:
        - employeeId
        - leaveTypeId
        - adjustment
        - reason
      properties:
        employeeId:
          type: string
        leaveTypeId:
          type: string
        adjustment:
          type: number
        reason:
          type: string
    LeaveType:
      type: object
      required:
        - name
        - description
        - accrualRate
        - requiresDocumentation
        - requiresApproval
      properties:
        name:
          type: string
        description:
          type: string
        accrualRate:
          type: number
        requiresDocumentation:
          type: boolean
        requiresApproval:
          type: boolean
        maxDays:
          type: number
          description: Maximum days allowed per year
          nullable: true
        maxConsecutiveDays:
          type: number
          description: Maximum consecutive days allowed
          nullable: true
        active:
          type: boolean
          description: Whether this leave type is currently active
          default: true
        color:
          type: string
          description: Color code for UI representation
          nullable: true
    RejectionReason:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
    EmployeeProfile:
      type: object
      required:
        - position
        - departmentId
      properties:
        position:
          type: string
          description: Job title or position of the employee
        departmentId:
          type: string
          description: ID of the department the employee belongs to
        hireDate:
          type: string
          format: date
          description: Date when the employee was hired
          
    EmployeeCreate:
      type: object
      required:
        - authUserId
        - firstName
        - lastName
        - email
        - position
        - departmentId
      properties:
        authUserId:
          type: string
          description: ID from the authentication system
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        position:
          type: string
          description: Job title or position of the employee
        departmentId:
          type: string
          description: ID of the department the employee belongs to
        hireDate:
          type: string
          format: date
          description: Date when the employee was hired
        managerId:
          type: string
          description: ID of the employee's manager
          nullable: true
        profilePicture:
          type: string
          description: URL of the employee's profile picture
          nullable: true
          
    EmployeeUpdate:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        position:
          type: string
        departmentId:
          type: string
        hireDate:
          type: string
          format: date
        managerId:
          type: string
          nullable: true
        profilePicture:
          type: string
          nullable: true
    Department:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Department name
        description:
          type: string
          description: Department description
          nullable: true
        managerId:
          type: string
          description: ID of the department manager
          nullable: true

paths:
  # Authentication Routes
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCredentials'
      responses:
        201:
          description: User registered successfully
        400:
          description: Invalid input or user already exists

  /api/auth/login:
    post:
      summary: Login user and get access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        200:
          description: Login successful, returns access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
        401:
          description: Invalid credentials

  /api/auth/validate-token:
    post:
      summary: Validate access token
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        200:
          description: Token is valid
        401:
          description: Invalid or expired token

  # Leave Request Routes
  /api/leave-requests/my-leaves:
    get:
      summary: Get all leave requests for the current user
      description: Accessible by all authenticated users
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of leave requests
        401:
          description: Unauthorized

  # Add these to the Leave Management section of your paths

  /api/leave-requests/admin/all-leaves:
    get:
      summary: Get all leave requests across the organization
      description: Accessible only by admins
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all leave requests
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role

  /api/leave-requests/department/{departmentId}:
    get:
      summary: Get leave requests for a specific department
      description: Admins can view any department, managers can only view their own department
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: departmentId
          required: true
          schema:
            type: string
          description: Department ID
      responses:
        200:
          description: List of departmental leave requests
        401:
          description: Unauthorized
        403:
          description: Forbidden - insufficient permissions
        404:
          description: Department not found

  /api/leave-requests/team-leaves:
    get:
      summary: Get leave requests for team members
      description: Accessible only by managers and admins
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of team leave requests
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires manager or admin role

  /api/leave-requests/{id}:
    get:
      summary: Get leave request by ID
      description: Access control is handled in controller
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Leave request details
        404:
          description: Leave request not found
        401:
          description: Unauthorized

  /api/leave-requests:
    post:
      summary: Create new leave request
      description: Available to all authenticated users
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveRequest'
      responses:
        201:
          description: Leave request created successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized

  /api/leave-requests/{id}/approve:
    put:
      summary: Approve a leave request
      description: Accessible only by managers and admins
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Leave request ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                comments:
                  type: string
                  description: Optional comments about the approval
      responses:
        200:
          description: Leave request approved
        400:
          description: Invalid request or leave request is not in a pending state
        403:
          description: Not authorized to approve
        404:
          description: Leave request not found
        401:
          description: Unauthorized

  /api/leave-requests/{id}/reject:
    put:
      summary: Reject a leave request
      description: Accessible only by managers and admins
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Leave request ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - comments
              properties:
                comments:
                  type: string
                  description: Required explanation for the rejection
      responses:
        200:
          description: Leave request rejected
        400:
          description: Invalid request, missing rejection reason, or leave request is not in a pending state
        403:
          description: Not authorized to reject
        404:
          description: Leave request not found
        401:
          description: Unauthorized

  /api/leave-requests/{id}/cancel:
    put:
      summary: Cancel a leave request
      description: Users can only cancel their own requests
      tags:
        - Leave Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Leave request cancelled
        404:
          description: Leave request not found
        401:
          description: Unauthorized

  # Leave Balance Routes
  /api/leave-balances/my-balances:
    get:
      summary: Get current user's leave balances
      description: Available to all authenticated users
      tags:
        - Leave Balance
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of user's leave balances
        401:
          description: Unauthorized

  /api/leave-balances/employee/{employeeId}:
    get:
      summary: Get leave balances for a specific employee
      description: Accessible only by managers and admins
      tags:
        - Leave Balance
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Employee's leave balances
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires manager or admin role
        404:
          description: Employee not found

  /api/leave-balances/adjust:
    post:
      summary: Adjust an employee's leave balance
      description: Accessible only by admins
      tags:
        - Leave Balance
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveBalance'
      responses:
        200:
          description: Leave balance adjusted successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role
        404:
          description: Employee or leave type not found

  # Leave Type Routes
  /api/leave-types:
    get:
      summary: Get all leave types
      description: Available to all authenticated users
      tags:
        - Leave Types
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of leave types
        401:
          description: Unauthorized
    post:
      summary: Create a new leave type
      description: Accessible only by admins
      tags:
        - Leave Types
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveType'
      responses:
        201:
          description: Leave type created successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role

  /api/leave-types/{id}:
    get:
      summary: Get leave type by ID
      description: Available to all authenticated users
      tags:
        - Leave Types
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Leave type details
        401:
          description: Unauthorized
        404:
          description: Leave type not found
    put:
      summary: Update a leave type
      description: Accessible only by admins
      tags:
        - Leave Types
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveType'
      responses:
        200:
          description: Leave type updated successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role
        404:
          description: Leave type not found
    delete:
      summary: Delete a leave type
      description: Accessible only by admins
      tags:
        - Leave Types
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Leave type deleted successfully
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role
        404:
          description: Leave type not found

  # Report Routes
  /api/reports/leave-by-department:
    get:
      summary: Get leave reports by department
      description: Accessible only by managers and admins
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        200:
          description: Department-wise leave report
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires manager or admin role

  /api/reports/leave-by-employee/{employeeId}:
    get:
      summary: Get leave reports for a specific employee
      description: Accessible only by managers and admins
      tags:
        - Reports
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Employee's leave report
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires manager or admin role
        404:
          description: Employee not found

  /api/reports/leave-by-type:
    get:
      summary: Get leave reports by leave type
      description: Accessible only by managers and admins
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        200:
          description: Leave type-wise report
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires manager or admin role

  /api/reports/leave-calendar:
    get:
      summary: Get leave calendar
      description: Available to all authenticated users
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        200:
          description: Leave calendar data
        401:
          description: Unauthorized

  /api/reports/export/csv:
    get:
      summary: Export reports as CSV
      description: Accessible only by admins
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        200:
          description: CSV file of reports
          content:
            text/csv:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role

  /api/reports/export/excel:
    get:
      summary: Export reports as Excel
      description: Accessible only by admins
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        200:
          description: Excel file of reports
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role
  # Employee Management Routes
  /api/employees/onboard:
    post:
      summary: Create employee profile for current user
      description: Self-onboarding for authenticated users
      tags:
        - Employee Management
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeProfile'
      responses:
        201:
          description: Employee profile created successfully
        400:
          description: Invalid input or profile already exists
        401:
          description: Unauthorized

  /api/employees:
    get:
      summary: Get all employees
      description: Accessible only by managers and admins
      tags:
        - Employee Management
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of employees
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires manager or admin role
    post:
      summary: Create employee profile for another user
      description: Accessible only by admins
      tags:
        - Employee Management
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
      responses:
        201:
          description: Employee profile created successfully
        400:
          description: Invalid input or profile already exists
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role

  /api/employees/{id}:
    get:
      summary: Get employee by ID
      description: Admins can view any employee, managers can view their department, employees can view themselves
      tags:
        - Employee Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Employee ID
      responses:
        200:
          description: Employee details
        401:
          description: Unauthorized
        403:
          description: Forbidden - insufficient permissions
        404:
          description: Employee not found
    put:
      summary: Update employee information
      description: Accessible only by admins
      tags:
        - Employee Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Employee ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdate'
      responses:
        200:
          description: Employee updated successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role
        404:
          description: Employee not found

  # Add to the paths section:
  /api/departments:
    get:
      summary: Get all departments
      description: Available to all authenticated users
      tags:
        - Department Management
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of departments
        401:
          description: Unauthorized
    post:
      summary: Create a new department
      description: Accessible only by admins
      tags:
        - Department Management
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        201:
          description: Department created successfully
        400:
          description: Invalid input or department name already exists
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role

  /api/departments/{id}:
    get:
      summary: Get department by ID
      description: Available to all authenticated users
      tags:
        - Department Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Department ID
      responses:
        200:
          description: Department details
        401:
          description: Unauthorized
        404:
          description: Department not found
    put:
      summary: Update a department
      description: Accessible only by admins
      tags:
        - Department Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Department ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        200:
          description: Department updated successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role
        404:
          description: Department not found
    delete:
      summary: Delete a department
      description: Accessible only by admins. Department must have no employees.
      tags:
        - Department Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Department ID
      responses:
        200:
          description: Department deleted successfully
        400:
          description: Department has employees and cannot be deleted
        401:
          description: Unauthorized
        403:
          description: Forbidden - requires admin role
        404:
          description: Department not found
  
  # Notification Routes
  /api/notifications:
    get:
      summary: Get current user's notifications
      description: Available to all authenticated users
      tags:
        - Notifications
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of user's notifications
        401:
          description: Unauthorized
        404:
          description: Employee profile not found
        500:
          description: Internal server error

  /api/notifications/unread-count:
    get:
      summary: Get count of unread notifications
      description: Available to all authenticated users
      tags:
        - Notifications
      security:
        - bearerAuth: []
      responses:
        200:
          description: Count of unread notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Number of unread notifications
        401:
          description: Unauthorized
        404:
          description: Employee profile not found
        500:
          description: Internal server error

  /api/notifications/{id}/read:
    put:
      summary: Mark a notification as read
      description: Available to all authenticated users
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Notification ID
      responses:
        200:
          description: Notification marked as read
        401:
          description: Unauthorized
        404:
          description: Notification not found or unauthorized
        500:
          description: Internal server error

  /api/notifications/mark-all-read:
    put:
      summary: Mark all notifications as read
      description: Available to all authenticated users
      tags:
        - Notifications
      security:
        - bearerAuth: []
      responses:
        200:
          description: All notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  count:
                    type: integer
                    description: Number of notifications marked as read
        401:
          description: Unauthorized
        404:
          description: Employee profile not found
        500:
          description: Internal server error

  /api/notifications/{id}:
    delete:
      summary: Delete a notification
      description: Available to all authenticated users
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Notification ID
      responses:
        200:
          description: Notification deleted successfully
        401:
          description: Unauthorized
        404:
          description: Notification not found or unauthorized
        500:
          description: Internal server error